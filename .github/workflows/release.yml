name: Create Release
on:
  push:
    tags: ["v*"]

jobs:
  release:
    runs-on: ubuntu-20.04
    container:
      image: golang:1.16
    steps:
      -
        name: Check out a copy of the repo
        uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      -
        run: date +%F > todays-date
      -
        name: Restore cache for today's nightly.
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-appimage-${{ hashFiles('todays-date') }}
      -
        name: Show Tag
        id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF##*/}
      -
        name: Install required utils
        run: |
          apt-get update
          apt-get -y install luarocks
          go get github.com/git-chglog/git-chglog/cmd/git-chglog
      -
        name: Install Luajit
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "luajit-2.1.0-beta3"
      -
        name: Setup  Environment
        run: |
          test -d build || {
            mkdir -p build
            wget https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
            chmod +x nvim.appimage
            ./nvim.appimage --appimage-extract
            mv ./squashfs-root/usr/bin/nvim ./build/nvim
          }
          mkdir -p ~/.local/share/nvim/site/pack/vendor/start
          git clone --depth 1 https://github.com/nvim-lua/plenary.nvim \
            ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim
          ln -s $(pwd) ~/.local/share/nvim/site/pack/vendor/start
      -
        name: Generate changelog
        run: |
          $(go env GOPATH)/bin/git-chglog \
            -c .github/chglog/config.yml \
            -t .github/chglog/CHANGELOG.tpl.md \
            -o RELEASE_CHANGELOG.md ${{ steps.tag.outputs.TAG }}
          cat RELEASE_CHANGELOG.md
      -
        name: Generate Luarocks
        run: |
          export GTAG=${{ steps.tag.outputs.TAG }}
          export PATH="${PWD}/build/:${PATH}"
          make genluarock
      -
        name: Push version update to master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git add ./rockspecs
          git commit -m ":bookmark: release ${{ steps.tag.outputs.TAG }}"
          git push origin HEAD:master
      # -
      #   name: Upload to luarocks
      #   env:
      #     LUAROCKS_TOKEN: ${{ secrets.LUAROCKS_TOKEN }}
      #   run: |
      #     export $LUAROCKSPEC=rockspec/sqlite-lua-${{ steps.version.outputs.VERSION_NUMBER }}-0.rockspec
      #     luarocks upload $LUAROCKSPEC --api-key=${LUAROCKS_TOKEN}
      -
        name: Create GH Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_CHANGELOG.md

